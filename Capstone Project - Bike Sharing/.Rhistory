> apply(store.df[,2:9],MARGIN=2,FUN=mean)
Year        Week     p1sales     p2sales
1.5000000  26.5000000 133.0485577 100.1567308
p1price     p2price      p1prom      p2prom
2.5443750   2.6995192   0.1000000   0.1384615
> apply(store.df[,2:9],MARGIN=1,FUN=mean)
[1] 29.9475 31.2475 32.9975 29.2725 31.2600 31.7850
[7] 27.5225 30.7850 28.0725 31.5600 30.5975 32.5850
[13] 25.6350 29.3225 27.9225 30.5350 31.4475 31.6600
[19] 29.4225 31.0350 30.2475 31.5975 31.6850 34.5100
[25] 30.3350 29.7975 33.3475 32.3850 33.7475 35.1600
[31] 30.8725 33.9725 29.5975 42.2225 34.6350 36.7475
[37] 31.8975 32.7225 35.1475 35.8100 33.2850 38.6350
[43] 35.0600 33.7600 32.3850 36.3850 40.2850 33.6475
[49] 35.9475 35.1975 35.3475 35.9100 28.6225 27.0600
[55] 35.7600 29.4725 32.0975 28.6225 26.1225 29.3225
[61] 32.5350 27.5600 30.5100 34.5850 29.4225 35.0225
[67] 30.3350 34.0350 33.6725 33.0350 34.5850 33.5600
[73] 28.8225 34.2850 35.8725 32.4725 31.8600 37.0850
[79] 31.2850 30.6225 34.7975 34.0225 36.5975 40.2225
[85] 31.0600 32.7475 35.3725 30.5975 29.2225 34.2850
[91] 35.2475 35.9850 33.9350 36.2725 41.5600 35.0350
[97] 33.3725 36.8975 35.8850 39.5600 31.9725 38.8975
[103] 39.9225 37.6225 30.3850 30.8100 26.0350 32.4225
[109] 25.6100 30.2350 27.4350 29.0225 38.7725 29.1850
[115] 33.2850 31.0975 31.3725 30.6850 39.4100 30.0975
[121] 30.7600 30.5725 28.0725 39.8100 30.1725 31.9100
[127] 29.5975 33.2100 35.5975 35.5225 32.9725 33.8600
[133] 34.7975 33.2850 36.7475 31.0225 31.5975 29.8725
[139] 30.5725 33.7975 34.8100 36.2850 33.7225 35.2975
[145] 32.4600 37.1475 32.2475 32.3225 31.9975 34.8725
[151] 29.5975 34.2850 31.6975 36.6350 37.2850 40.5850
[157] 24.4475 39.9350 29.8600 29.0225 31.8475 29.4975
[163] 39.4350 25.2225 31.9350 32.6475 30.5975 29.3100
[169] 30.9350 32.1725 36.1100 32.4100 32.7225 30.9850
[175] 36.1725 36.2850 32.5975 33.0225 33.4725 34.0975
[181] 31.5975 35.5600 32.6225 30.8100 33.2975 38.8725
[187] 30.9600 32.9850 33.4725 35.1350 31.2475 37.0850
[193] 34.3100 38.5350 35.3850 36.8100 32.7100 34.4350
[199] 35.9975 43.3350 38.4350 36.1600 41.6850 33.9975
[205] 34.9725 36.9100 38.6975 35.0975 27.9975 29.1225
[211] 37.9350 27.3350 36.2350 27.3850 28.0350 36.2225
[217] 31.5975 29.9725 31.2225 29.9100 29.3100 37.2350
[223] 33.0975 27.4725 31.5975 30.3475 33.7600 33.6600
[229] 30.4975 30.8600 33.3100 42.3350 34.9350 30.6600
[235] 32.7725 34.6100 31.8975 42.7100 31.4475 32.9475
[241] 37.4350 38.6350 31.1100 33.0475 36.9975 38.6100
[247] 37.6225 34.4350 32.3850 39.5100 35.0600 33.6725
[253] 43.4725 32.8100 34.4975 33.3975 34.4475 37.9725
[259] 40.6725 36.7225 26.3725 31.9350 33.6600 28.6600
[265] 38.4725 25.9475 29.5475 28.6100 31.3350 38.1350
[271] 29.4975 29.5350 29.5350 30.0600 37.3725 29.3725
[277] 29.3350 29.5100 35.6850 31.0100 39.6850 30.0975
[283] 30.8725 33.0225 32.6725 33.1975 42.4725 31.2225
[289] 38.8725 30.5225 34.5225 33.9100 32.3975 33.4350
[295] 32.1600 41.0975 38.2975 38.4975 37.5725 32.8850
[301] 40.3850 37.6725 33.4725 37.2975 38.1600 40.0225
[307] 35.8975 36.6225 35.9975 34.5475 37.9850 36.4100
[313] 29.6475 32.0475 33.6225 29.7850 31.4100 30.2600
[319] 30.7475 34.9975 30.4350 26.8100 29.7600 28.5725
[325] 29.3225 26.2225 32.9600 31.5600 34.2100 29.5975
[331] 31.7600 31.8725 32.9475 31.9100 33.7725 34.1725
[337] 32.7225 32.2600 29.9725 30.9100 34.6475 31.9975
[343] 31.7225 32.3850 35.4975 30.0100 32.1600 31.1975
[349] 33.9975 34.0600 31.6225 35.4850 37.7225 33.6475
[355] 36.9225 35.1850 31.0475 33.0100 36.9225 34.9600
[361] 34.3100 36.7475 42.8600 36.5350 27.1475 31.3725
[367] 32.1100 31.3100 30.3975 30.9475 29.8100 29.0100
[373] 29.7475 31.4600 31.8975 31.4100 33.1975 28.4725
[379] 35.3100 28.2225 29.5350 29.6975 30.9975 36.1850
[385] 31.1975 37.4600 33.3475 32.9350 39.2725 31.4725
[391] 31.4850 30.3850 35.9600 37.7475 30.5225 32.5975
[397] 32.3725 33.8100 42.8100 33.9850 34.9225 33.6350
[403] 37.7975 35.2975 33.4475 34.3975 33.0100 41.0975
[409] 34.1100 37.3350 38.6600 36.2100 33.1600 33.9725
[415] 37.0475 35.0600 26.6350 30.0600 25.4350 30.0850
[421] 33.5725 28.4975 30.5475 30.6350 28.4725 27.4725
[427] 33.8100 30.8600 27.7100 33.4350 33.5350 28.4100
[433] 32.3100 31.4100 35.7850 31.6850 32.2725 31.1225
[439] 28.8850 34.2975 32.0725 28.1850 39.7850 32.7350
[445] 38.7975 33.2850 40.5225 33.6975 29.7475 32.4475
[451] 33.4975 38.0475 32.7725 32.8100 32.9725 33.9350
[457] 29.0725 36.7850 31.8600 39.8100 45.7600 34.5350
[463] 34.2975 39.5225 33.5975 34.9975 36.0600 35.8600
[469] 36.8100 27.4350 27.8725 36.4225 29.5225 28.1225
[475] 31.7100 31.4850 30.8600 29.6350 33.5975 31.9600
[481] 42.3475 29.4975 26.7725 31.0100 30.5725 33.1850
[487] 30.9975 30.7600 32.1350 29.7600 38.3225 31.2850
[493] 40.9100 27.2475 33.2600 36.3100 32.6600 37.2975
[499] 31.3225 32.4100 38.9975 31.6225 39.8225 36.2350
[505] 30.2475 38.4100 31.6850 33.1725 35.6850 35.5850
[511] 31.7475 36.0350 32.8725 42.3850 36.1725 33.9350
[517] 36.2850 34.8475 35.6225 31.7725 26.3725 25.7850
[523] 38.0100 28.0100 28.4350 32.6475 29.7350 28.8850
[529] 27.1975 33.6850 26.5350 32.1225 30.1975 29.4100
[535] 46.6725 29.1725 31.6225 36.8600 30.1850 32.1350
[541] 30.2225 39.2475 29.0975 32.5975 37.0600 32.1475
[547] 37.8850 39.7100 38.7225 32.8850 31.7725 32.7350
[553] 29.9350 33.5475 35.5475 32.8475 33.5225 34.2225
[559] 40.1600 34.3350 39.5850 29.8225 32.7975 35.4100
[565] 35.1725 37.7600 38.6725 32.9975 31.5975 39.3475
[571] 34.0975 34.3475 32.4600 29.4975 37.5225 30.7100
[577] 26.9100 40.2725 34.0475 34.0725 27.8475 32.6600
[583] 32.3100 30.9225 31.8475 32.7100 32.5975 31.8475
[589] 32.7850 34.8100 32.1725 27.6475 33.0475 27.6725
[595] 36.2350 29.1725 34.6850 31.9975 30.6100 38.9975
[601] 30.2725 37.8850 31.9600 30.5600 34.9975 30.1975
[607] 37.7975 37.3600 40.3850 32.2350 32.2225 33.7725
[613] 32.5975 39.8350 36.8225 35.5975 33.0975 31.9225
[619] 38.1725 35.5975 37.5600 39.4350 37.4600 38.6725
[625] 33.1350 29.4100 31.2725 27.7225 37.1100 27.7225
[631] 39.4100 28.7350 28.4725 31.6475 35.9975 30.9600
[637] 27.1600 34.1975 31.9475 32.5350 29.5850 34.9475
[643] 31.8475 31.1350 32.6850 38.0850 30.3475 32.3100
[649] 34.3350 33.3100 31.7225 29.4600 35.9475 34.8225
[655] 36.6350 30.4350 31.1975 33.3100 38.2350 32.1975
[661] 33.5725 38.0350 34.7350 34.8725 34.4100 33.5975
[667] 35.3225 40.2350 35.8475 32.0600 42.4100 34.4475
[673] 29.3475 35.8725 35.6725 34.7100 24.5475 28.8350
[679] 31.1225 27.7350 28.8475 25.9725 29.7725 32.6850
[685] 31.3850 30.6225 29.4350 33.4600 35.7475 27.3225
[691] 31.8350 35.4975 34.8225 34.2475 31.3100 31.4725
[697] 34.7850 35.6600 31.2475 27.3725 30.5850 37.4475
[703] 31.1225 30.8725 31.7725 35.5100 34.0225 31.2225
[709] 29.6225 33.3475 34.1850 36.9350 35.8100 35.7100
[715] 33.5475 33.8975 32.9350 33.0100 34.1975 34.4600
[721] 37.5475 32.3475 41.6725 38.4100 34.0350 33.6475
[727] 36.2475 34.9350 27.7600 23.2850 28.3350 31.0975
[733] 33.8475 32.5850 30.0600 34.9600 33.0100 27.4725
[739] 34.0350 34.2475 34.1975 28.9100 38.1975 30.9475
[745] 36.8600 33.5975 29.1350 31.7225 37.0850 33.7225
[751] 31.0100 32.1600 31.5850 32.6225 33.4600 34.5600
[757] 36.8475 33.3850 34.3100 40.7725 30.2225 35.7475
[763] 31.2600 42.7725 30.9725 33.4350 29.6725 33.0725
[769] 31.1225 37.8100 31.1225 31.7850 36.4725 34.0600
[775] 42.5975 36.9850 35.8475 37.5725 42.0850 36.2850
[781] 32.9100 29.7475 28.4350 29.5350 34.6725 26.5600
[787] 29.6100 35.5475 39.8850 26.8975 32.9975 26.9100
[793] 35.4100 35.8850 27.7475 32.2475 28.6850 37.1225
[799] 29.3225 32.3475 37.8850 33.1725 34.6850 34.9100
[805] 41.0600 32.8350 29.9350 36.7975 33.9475 37.3725
[811] 31.3475 31.0850 32.9100 30.7850 31.0600 35.7850
[817] 36.4725 31.1350 33.4975 40.6725 36.6600 36.0975
[823] 33.7225 36.2725 44.6850 34.1475 33.2975 35.6975
[829] 38.6850 36.6850 36.5475 37.5100 27.0850 29.7850
[835] 31.1975 23.7475 29.9850 28.4975 28.6850 30.4475
[841] 33.0975 32.5475 32.6850 30.4725 32.6975 31.2475
[847] 28.3475 28.2475 30.5600 25.7225 38.7600 32.4475
[853] 32.0350 31.3475 26.5225 32.1850 34.6350 31.4350
[859] 32.9975 34.2100 29.6725 33.3475 33.5600 31.2600
[865] 34.5225 31.8100 33.1350 34.1850 37.2350 39.3975
[871] 36.5600 34.7975 45.3100 37.3725 31.3475 31.9600
[877] 38.7975 37.1100 43.4475 36.7225 33.1850 35.0850
[883] 35.0100 39.5350 30.0975 32.9350 28.7475 28.4600
[889] 31.8100 34.2975 32.7225 30.2600 32.4225 28.6850
[895] 27.3100 29.3350 28.9350 31.1225 35.5475 32.8725
[901] 30.0975 33.8100 33.4725 29.2475 30.6350 33.6975
[907] 36.4475 34.8350 32.8975 30.5975 44.8100 32.1975
[913] 33.8100 33.6225 30.4600 30.9350 34.6725 32.7975
[919] 31.2225 39.0975 32.9725 36.9225 34.9100 34.7100
[925] 34.6725 38.6850 39.2100 37.8725 36.2600 30.4725
[931] 34.8225 35.4600 40.9225 34.6850 33.8475 31.7100
[937] 30.3100 28.3225 29.7975 26.0725 27.5975 34.5600
[943] 26.2100 29.7475 38.9100 26.3100 34.3600 28.4475
[949] 27.8350 32.8475 28.3725 31.4350 32.7850 31.8475
[955] 33.0600 30.7475 32.9100 31.2350 31.8475 29.8850
[961] 33.4600 31.5600 32.5600 32.1475 32.2600 31.6600
[967] 33.8475 32.2850 34.5600 33.4350 32.2100 39.9600
[973] 34.2725 33.2475 29.8225 34.9975 34.1600 38.2475
[979] 39.3350 33.4225 38.8475 33.1850 34.6350 30.3100
[985] 34.4725 33.6350 39.0600 34.4850 35.4225 30.9600
[991] 25.5350 33.2975 35.3100 27.9475 28.0975 32.3475
[997] 31.1225 29.0225 34.2225 29.9100
[ reached getOption("max.print") -- omitted 1080 entries ]
> apply(store.df[,2:9],MARGIN=2,function(x){mean(x)-median(x)})
Year      Week   p1sales   p2sales   p1price
0.0000000 0.0000000 4.0485577 4.1567308 0.0543750
p2price    p1prom    p2prom
0.1095192 0.1000000 0.1384615
> crm <- read.csv("G:/Intern - IIM Lucknow/CRMData.csv")
>   View(crm)
> table(crm$sat.service)
1   2   3   4   5
22 133 309 167  28
> table(crm$sat.selection)
1   2   3   4   5
106 256 229  63   5
> plot(table(crm$sat.selection))
hist(store.df$p1sales)
hist(store.df$p1sales,breaks=20)
lines(density(store.df$p1sales))
lines(density(store.df$p1sales),type = 'l',col="darkred")
lines(density(store.df$p1sales,bw=10),type = "l",col="darkred",lwd=2)
hist(store.df$p1sales,breaks=30)
lines(density(store.df$p1sales,bw=10),type = "l",col="darkred",lwd=2)
lines(density(store.df$p1sales,bw=10),type = "L",col="darkred",lwd=2)
lines(density(store.df$p1sales,bw=10),type = "l",col="darkred",lwd=2)
lines(density(store.df$p1sales,bw=10),type = "1",col="darkred",lwd=2)
lines(density(store.df$p1sales,bw=10),type = "l",col="darkred",lwd=2)
lines(density((store.df$p1sales),bw=10),type = "l",col="darkred",lwd=2)
lines(density((store.df$p1sales),bw=10),type = "l",col="darkred",lwd=2)
hist(store.df$p1sales,breaks=30)
lines(density((store.df$p1sales),bw=10),type = "l",col="darkred",lwd=2)
lines(density((store.df$p1sales),bw=10),type = "l",col="darkred",lwd=2)
lines(density((store.df$p1sales),bw=10),)
lines(density((store.df$p1sales),bw=10),
type='l',col='blue',lwd=3)
density(store.df$p1sales)
lines9density(store.df$p1sales))
line(density(store.df$p1sales))
lines(density(store.df$p1sales))
lines(density(store.df$p1sales))
colors()
hist(store.df$p1sales,breaks=30)
lines(density((store.df$p1sales),bw=10),
type='l',col='blue',lwd=3)
lines(density((store.df$p1sales),bw=10),
type='l',col='blue',lwd=1)
boxplot(store.df$p2sales)
boxplot(store.df$p2sales,horizontal = TRUE)
boxplot(store.df$storeNum~ store.df$p2sales,horizontal = TRUE)
boxplot(store.df$storeNum~ store.df$p2sales,horizontal = TRUE,las=1)
boxplot(store.df$storeNum~ store.df$p2sales,horizontal = TRUE)
boxplot(store.df$storeNum~ store.df$p2sales)
boxplot(store.df$p2sales~ store.df$storeNum,horizontal = TRUE)
boxplot(store.df$p2sales~ store.df$storeNum,horizontal = TRUE,col=c("red","green","blue"))
boxplot(store.df$p1prom ~  store.df$p1sales)
boxplot(store.df$p1prom ~  store.df$p1sales,horizontal=TRUE)
boxplot(store.df$p1prom ~  store.df$p1prom,horizontal=TRUE)
boxplot(store.df$p1sales ~  store.df$p1prom,horizontal=TRUE)
boxplot(store.df$p2sales ~  store.df$p2prom,horizontal=TRUE)
install.packages("rmarkdown")
install.packages("rmarkdown")
View(crm)
View(crm)
plot(x=crm$age,y=crm$credit.score)
abline(h=mean(crm$credit.score,col="dark blue",lty="dotted"))
abline(v=mean(crm$credit.score,col="dark blue",lty="dotted"))
abline(v=mean(crm$age,col="dark blue",lty="dotted"))
plot(x=crm$age,y=crm$credit.score,col='blue')
abline(h=mean(crm$credit.score,col="dark blue",lty="dotted"))
abline(v=mean(crm$age,col="dark blue",lty="dotted"))
abline(lm(crm$age ~ crm$credit.score))
abline(lm(crm$credit.score ~ crm$age))
plot(x=crm$store.spend,y=crm$online.spend,col='blue')
hist(x=crm$store.spend,y=crm$online.spend,col='blue')
hist(crm$store.spend,crm$online.spend,col='blue')
plot(x=crm$store.spend,y=crm$online.spend,col='blue',log='xy')
plot(cust.df$store.spend, cust.df$online.spend,
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)",
cex=0.6)
View(crm)
cust.df <- read.csv("G:/Intern - IIM Lucknow/CRMData.csv")
View(cust.df)
plot(cust.df$store.spend, cust.df$online.spend,
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)",
cex=0.6)
plot(cust.df$store.spend, cust.df$online.spend,
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)",
cex=0.6)
plot(cust.df$store.spend, cust.df$online.spend,
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)",
cex=0.6)
hist(cust.df$store.spend,
main="Histogram of Store Spending",
xlim=c(0,400), ylim=c(0,450),  # add limits to the axes
breaks=(0:ceiling(max(cust.df$store.spend)/10))*10,
col=c("red","blue","green","yellow"),
xlab="Prior 12 months online sales ($)" )
boxplot(cust.df$store.spend,
main="Boxplot of Store Spending",
col=c("yellow"),
horizontal=TRUE,
xlab="Prior 12 months online sales ($)" )
plot(cust.df$store.spend+1, cust.df$online.spend+1,
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)",
cex=0.6
)
plot(cust.df$store.spend, cust.df$online.spend,
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)",
cex=0.6,
log="xy")
plot(cust.df$store.spend+1, cust.df$online.spend+1,
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)",
cex=0.6,
log="xy")
par(mfrow=c(1, 3))
with(cust.df, plot(distance.to.store, store.spend,cex=0.5))
with(cust.df, plot(distance.to.store, online.spend,cex=0.5))
with(cust.df, plot(distance.to.store, store.spend+1,cex=0.5, log="xy"))
with(cust.df, plot(distance.to.store, online.spend+1,cex=0.5, log="xy"))
par(mfrow=c(1, 1))
par(mfrow=c(2, 2))
with(cust.df, plot(distance.to.store, store.spend,cex=0.5))
with(cust.df, plot(distance.to.store, online.spend,cex=0.5))
with(cust.df, plot(distance.to.store, store.spend+1,cex=0.5, log="xy"))
with(cust.df, plot(distance.to.store, online.spend+1,cex=0.5, log="xy"))
par(mfrow=c(1, 1))
my.col <- c("black", "red")
my.pch <- c(1, 19) # R's symbols for solid and open circles (see ?points)
plot(cust.df$store.spend, cust.df$online.spend,
cex=0.7,
col=my.col[cust.df$email], pch=my.pch[cust.df$email],
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)" )
legend(x="topright", legend=paste("email on file:", levels(cust.df$email)),
col=my.col, pch=my.pch)
plot(cust.df$store.spend, cust.df$online.spend,
log="xy",cex=0.7,
col=my.col[cust.df$email], pch=my.pch[cust.df$email],
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)" )
legend(x="topright", legend=paste("email on file:", levels(cust.df$email)),
col=my.col, pch=my.pch)
pairs(formula = ~ age + credit.score + online.spend, cex=0.6,
data=cust.df)
pairs(formula = ~ age + credit.score + distance.to.store +
online.spend + store.trans + store.spend, cex=0.6,
data=cust.df)
library(car)
scatterplotMatrix(formula = ~ age + credit.score + online.spend, cex=0.6,
data=cust.df, diagonal="histogram")
library(car)
scatterplotMatrix(formula = ~ age + credit.score + online.spend, cex=0.6,
data=cust.df, diagonal="histogram")
cor(cust.df$age, cust.df$credit.score)
cor.test(cust.df$age, cust.df$credit.score)
cor(cust.df[, c(2, 3, 5:10)])  # only numeric cols
library(corrplot)    # install if needed
corrplot(corr=cor(cust.df[ , c(2, 3, 5:12)], use="complete.obs"),
method ="ellipse")
install.packages("corrplot")
library(corrplot)    # install if needed
corrplot(corr=cor(cust.df[ , c(2, 3, 5:12)], use="complete.obs"),
method ="ellipse")
library(gplots)      # for color interpolation
par(mfrow=c(1, 1))
corrplot.mixed(corr=cor(cust.df[ , c(2, 3, 5:12)], use="complete.obs"),
upper="ellipse", tl.pos="lt", col = colorpanel(50, "red", "gray60", "blue4"))
library(gplots)      # for color interpolation
par(mfrow=c(1, 1))
corrplot.mixed(corr=cor(cust.df[ , c(2, 3, 5:12)], use="complete.obs"),
upper="ellipse", tl.pos="lt")
plot(cust.df$sat.service, cust.df$sat.selection,
xlab="Sat, Service", ylab="Sat, Selection")
plot(jitter(cust.df$sat.service), jitter(cust.df$sat.selection),
xlab="Sat, Service", ylab="Sat, Selection")
knitr::opts_chunk$set(echo = TRUE)
histogram(df$temp)
knitr::opts_chunk$set(echo = TRUE)
setwd("G:/Intern - IIM Lucknow/Bike-Sharing-Dataset")
library(psych)
library(car)
library(corrgram)
library(ggplot2)
library("lattice", lib.loc="C:/Program Files/R/R-3.4.3/library")
df <- read.csv(paste("hour.csv",sep=""))
View(df)
describe(df)
str(df)
attach(df)
aggregate(cbind(casual,registered,cnt)~season,data=df,mean)
par(mfrow=c(3,1))
bwplot(season~casual ,data=df,xlab = "Total count of bike sharing",main='Casual Customers')
bwplot(season~registered ,data=df,xlab = "Total count of bike sharing",main='Registered Customers')
bwplot(season~cnt ,data=df,xlab = "Total count of bike sharing",main='All customers')
aggregate(cbind(casual,registered,cnt)~mnth,data=df,mean)
par(mfrow=c(3,1))
plot(aggregate(casual~mnth ,data=df,mean),xlab='Month',ylab='Count of Bike shared',main='casual users')
plot(aggregate(registered~mnth ,data=df,mean),xlab='Month',ylab='Count of Bike shared',main='registered users')
plot(aggregate(cnt~mnth ,data=df,mean),xlab='Month',ylab='Count of Bike shared',main='all users')
aggregate(cbind(casual,registered,cnt)~hr,data=df,mean)
par(mfrow=c(3,1))
plot(aggregate(casual~hr ,data=df,mean),xlab='Hour of the day',ylab='Count of Bike shared',main='casual users')
plot(aggregate(registered~hr ,data=df,mean),xlab='Hour of the day',ylab='Count of Bike shared',main='registered users')
plot(aggregate(cnt~hr ,data=df,mean),xlab='Hour of the day',ylab='Count of Bike shared',main='all users')
mytable<-aggregate(cbind(casual,registered,cnt)~holiday ,data=df,mean)
mytable
par(mfrow=c(1,3))
barchart(casual~holiday,data=mytable,horizontal=FALSE,ylim=c(0,50))
barchart(registered~holiday,data=mytable,horizontal=FALSE,ylim=c(0,200))
barchart(cnt~holiday,data=mytable,horizontal=FALSE,ylim=c(0,200))
wsittable<-aggregate(cnt~weathersit ,data=df,mean)
wsittable
bwplot(weathersit~cnt,data=df,xlab ="No of total bike shared",ylab="Different weather situation",main="")
histogram(df$temp)
scatterplot(cnt~temp,data=df,col='green')
histogram(df$hum)
scatterplot(cnt~hum,data=df)
histogram(df$windspeed)
scatterplot(cnt~windspeed,data=df)
bike_share_train_subset <- df[,5:9]
bike_share_train_subset$humidity <- as.numeric(bike_share_train_subset$humidity)
bike_share_train_subset <- df[,5:9]
train_cor <- cor(bike_share_train_subset)
library(corrplot)
corrplot(train_cor, method = 'color', addCoef.col="black")
bike_share_train_subset <- df[,10:14]
train_cor <- cor(bike_share_train_subset)
library(corrplot)
corrplot(train_cor, method = 'color', addCoef.col="black")
df_subset <- df[,10:17]
df_cor <- cor(df_subset)
library(corrplot)
corrplot(df_cor, method = 'color', addCoef.col="black")
corrgram(df,lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Corrgram of Count intercorrelations")
corrgram(df,lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Corrgram")
corrgram(df,lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Corrgram")
t-test(cnt~weathersit,data=df)
t.test(cnt~weathersit,data=df)
install.packages(sqldf)
install.packages("sqldf")
library(sqldf)
library(ggplot2)
# Get the average count of bikes rent by weather, hour
weather_summary_by_hour <- sqldf('select weathersit, hour, avg(cnt) as cnt from df group by weather, hour')
library(sqldf)
library(ggplot2)
# Get the average count of bikes rent by weather, hour
weather_summary_by_hour <- sqldf('select weathersit, hr, avg(cnt) as cnt from df group by weather, hour')
library(sqldf)
library(ggplot2)
# Get the average count of bikes rent by weather, hour
weather_summary_by_hour <- sqldf('select weathersit, hr, avg(cnt) as cnt from df group by weathersit, hr')
# From this plot it shows,
# People rent bikes more when weather is good
# We see bike rent only at 18th hour when weather is very bad
ggplot(df, aes(x=hour, y=cnt, color=weathersit))+geom_point(data = weather_summary_by_hour, aes(group = weathersit))+geom_line(data = weather_summary_by_hour, aes(group = weathersit))+ggtitle("Bikes Rent By Weather")+ scale_colour_hue('Weather',breaks = levels(df$weathersit), labels=c('Good', 'Normal', 'Bad', 'Very Bad'))
library(sqldf)
library(ggplot2)
# Get the average count of bikes rent by weather, hour
weather_summary_by_hour <- sqldf('select weathersit, hr, avg(cnt) as cnt from df group by weathersit, hr')
# From this plot it shows,
# People rent bikes more when weather is good
# We see bike rent only at 18th hour when weather is very bad
ggplot(df, aes(x=hr, y=cnt, color=weathersit))+geom_point(data = weather_summary_by_hour, aes(group = weathersit))+geom_line(data = weather_summary_by_hour, aes(group = weathersit))+ggtitle("Bikes Rent By Weather")+ scale_colour_hue('Weather',breaks = levels(df$weathersit), labels=c('Good', 'Normal', 'Bad', 'Very Bad'))
histogram(df$hum)
scatterplot(cnt~hum,data=df,col='green')
histogram(df$windspeed)
scatterplot(cnt~windspeed,data=df,col='green')
histogram(df$temp)
scatterplot(cnt~temp,data=df)
t.test(cnt~holiday,data=df)
t.test(cnt~weathersit,data=df)
plot(cars)
setwd("G:/Intern - IIM Lucknow/Bike-Sharing-Dataset")
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv(paste("hour.csv",sep=""))
mod1 <-lm(cnt~weathersit+temp+atemp+hum+windspeed+casual+registered,df)
summary(mod1)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv(paste("hour.csv",sep=""))
mod1 <-lm(cnt~weathersit+temp+atemp+hum+windspeed+casual+registered,df)
summary(mod1)
df_subset <- df[,10:17]
df_cor <- cor(df_subset)
library(corrplot)
corrplot(df_cor, method = 'color', addCoef.col="black")
head(df)
scatterplot(cnt~temp,data=df,main="Temperature Effects")
library("lattice", lib.loc="C:/Program Files/R/R-3.4.3/library")
scatterplot(cnt~temp,data=df,main="Temperature Effects")
library("lattice", lib.loc="C:/Program Files/R/R-3.4.3/library")
library(ggplot2)
scatterplot(cnt~temp,data=df,main="Temperature Effects")
library("lattice", lib.loc="C:/Program Files/R/R-3.4.3/library")
library(ggplot2)
library(car)
scatterplot(cnt~temp,data=df,main="Temperature Effects")
scatterplot(cnt~hum,data=df,main="Humidity Effects")
scatterplot(cnt~windspeed,data=df,main="Windspeed Effects")
library(car)
scatterplot(cnt~temp,data=df,main="Temperature Effects")
scatterplot(cnt~hum,data=df,main="Humidity Effects")
scatterplot(cnt~windspeed,data=df,main="Windspeed Effects")
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv(paste("hour.csv",sep=""))
mod1 <-lm(cnt~weathersit+temp+atemp+hum+windspeed+casual+registered,df)
summary(mod1)
head(df)
bwplot(weathersit~cnt,data=df,xlab ="No of total bike shared",ylab="Different weather situation",main="")
library(car)
scatterplot(cnt~temp,data=df,main="Temperature Effects")
scatterplot(cnt~hum,data=df,main="Humidity Effects")
scatterplot(cnt~windspeed,data=df,main="Windspeed Effects")
df_subset <- df[,10:17]
df_cor <- cor(df_subset)
library(corrplot)
corrplot(df_cor, method = 'color', addCoef.col="black")
bwplot(weathersit~cnt,data=df,xlab ="No of total bike shared",ylab="Different weather situation",main="")
